#include <iostream>
#include <io.h>

/*Дан текст – непустая последовательность не длиннее ста символов. Признаком конца ввода является точка, в сам текст точка не входит. 
Проверить, удовлетворяет ли текст заданному условию. 
Если условие выполнено, преобразовать текст по указанному в варианте правилу; в противном случае выдать соответствующее сообщение. 
Преобразованный текст напечатать. 
Проверяемое условие и правила обработки текста определяются конкретным вариантом задания. 
Если введенная последовательность символов не является текстом, преобразовывать ее не нужно, а следует напечатать соответствующее сообщение. 
Ввод текста, проверка условия, обработка текста и печать результата должны выполняться последовательно, отдельными частями программы

Проверяемое условие - Текст оканчивается прописной латинской буквой, которая больше в тексте не встречается (с.к.)

Заменить каждую ненулевую цифру соответствующей ей строчной буквой латинского алфавита (1 → a, 2 → b и т.д.).
*/

int main() {
	char* text = new char[100];
	int textSize = 0;
	for (std::cin >> text[0]; text[textSize] != '.'; textSize++, text[textSize] = std::cin.get());
	//std::cout << textSize << std::endl;
	text[textSize] = '\0';
	//std::cout << text << std::endl;
	int exitCode = 2;
	__asm {
		mov esi, text; начало строки в esi
		mov ecx, textSize; размер строки в ecx
		dec ecx

		;переход к последнему элементу
		add esi, ecx
		mov al, [esi];помещаем последний элемент текста в al

		;if (al >= 97 && al <= 122) (последний элемент - прописная латинская буква)

		cmp al, 97
		jl exit1; если последний элемент - не прописная латинская буква, выходим с кодом 1
		cmp al, 122
		jg exit1; аналогично

		;проверка повторения последнего символа в тексте
		cld
		mov edi, text

		repne scasb
		je exit1; если найден элемент равный последнему, выходим с кодом 1

		; обработка строки
		mov esi, text
		mov ecx, textSize

		L: ; начало цикла
		mov al, [esi]
			;if (al >= 49 && al <= 57) (цифра от 1 до 9)
			cmp al, 49
			jl continue; не цифра от 1 до 9 - переходим на следующую итерацию
			cmp al, 57
			jg continue; аналогично

			;иначе прибавляем к коду символа 48
			add al, 48
			mov [esi], al ;записываем обработанный символ обратно в текст

			continue:
			inc esi
			loop L

		exit0 : ; выход без ошибок
		mov exitCode, 0
			jmp exitt

		exit1 : ; выход при несоблюдении проверяемого условия
		mov exitCode, 1
			jmp exitt

		exitt : ; точка выхода
	}
	if (exitCode) std::cout  << "Wrong text." << std::endl;
	else std::cout << text << std::endl;
	
	return 0;
}